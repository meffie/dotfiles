[.global]
domain = example.com
namefmt = afs{guest:02d}
distro = centos7
playbooks =
  {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml
  {playbookdir}/testcell.yaml
testhost = afs01.example.com
testsuite = tests
verbosity =
postcreate =
  ansible-playbook {verbosity} -i {scriptdir}/inventory.sh {playbooks} &&
  ssh {testhost} run-openafs-robotest.sh {testsuite}
guests = 1
group.afs_clients = *
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles

[t01]
desc = package install on single server
guests = 1
group.afs_clients = *
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1

[t02]
desc = package install on 1 db and 3 fs
guests = 6
group.afs_clients = *
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 4..6
group.afs_robotest = 1

[t03]
desc = package install on 3 db and 3 fs
guests = 6
group.afs_clients = *
group.afs_kdcs = 1
group.afs_databases = 1..3
group.afs_fileservers = 4..6
group.afs_robotest = 1

[t04]
desc = build and test on 3 db and 3 fs, centos
guests = 6
group.afs_clients = *
group.afs_kdcs = 1
group.afs_databases = 1..3
group.afs_fileservers = 4..6
group.afs_robotest = 1
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = https://github.com/openafs/openafs
var.afs_server_build_git_ref = master

[t05]
desc = build and test on one host
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_client_install_method = rsync
playbooks =
  {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml
  {playbookdir}/upgrade-kernel.yaml
  {playbookdir}/testcell.yaml

[t06]
desc = centos7
distro = centos7

[t07]
desc = centos6
distro = centos6
var.afs_openafs_server_repourl = "https://download.sinenomine.net/openafs/bins/1.8.5/el6/$basearch"
var.afs_openafs_client_repourl = "https://download.sinenomine.net/openafs/bins/1.8.5/el6/$basearch"

[t08]
desc = package install on debian9, single host
distro = debian9
playbooks =
  {playbookdir}/local-dns.yaml
  {playbookdir}/upgrade-kernel.yaml
  {playbookdir}/testcell.yaml

[t09]
desc = fedora29
distro = fedora29

[t10]
desc = fedora30
distro = fedora30

[t11]
desc = ubuntu1604
distro = ubuntu1604

[t12]
desc = ubuntu1804
distro = ubuntu1804

[t13]
desc = centos7
var.afs_client_install_dkms= yes

[t14]
desc = centos7, make-install, master
distro = centos7
playbook = {playbooks}/testcell.yaml
var.afs_server_install_method = make-install
var.afs_server_devel_gitclean = yes

[t15]
desc = centos7, make-install, 1.6.23
distro = centos7
playbook = {playbooks}/testcell.yaml
var.afs_server_install_method = make-install
var.afs_server_devel_gitref = openafs-stable-1_6_23
var.afs_server_devel_gitclean = yes
var.afs_server_devel_sysname = amd64_linux26
var.afs_server_devel_extra_configure_opts = --with-afs-sysname=amd64_linux26

[t16]
desc = ubuntu1804, make-install test
distro = ubuntu1804
disksize = 20
var.afs_server_install_method = make-install

[t17]
desc = centos7, build
distro = centos7
cpus = 4
postcreate =
  ansible-playbook -vv -i {scriptdir}/inventory.sh
  {playbookdir}/local-dns.yaml
  {playbookdir}/upgrade-kernel.yaml
  {playbookdir}/build1.yaml

[t18]
desc = centos2, build, transarc style
distro = centos7
cpus = 4
postcreate =
  ansible-playbook -i {scriptdir}/inventory.sh
  {playbookdir}/local-dns.yaml
  {playbookdir}/upgrade-kernel.yaml
  {playbookdir}/build3.yaml

[t19]
desc = ubuntu1804, build
distro = ubuntu1804
disksize = 20
cpus = 4
postcreate =
  ansible-playbook -vv -i {scriptdir}/inventory.sh
  {playbookdir}/local-dns.yaml
  {playbookdir}/upgrade-kernel.yaml
  {playbookdir}/build2.yaml

[t20]
desc = ubuntu1804, build
distro = ubuntu1804
disksize = 20
cpus = 4
postcreate =
  ansible-playbook -i {scriptdir}/inventory.sh
  {playbookdir}/local-dns.yaml
  {playbookdir}/upgrade-kernel.yaml
  {playbookdir}/build3.yaml

[t21]
desc = ubuntu1804, build
distro = ubuntu1804
disksize = 20
cpus = 4
postcreate =
  ansible-playbook -i {scriptdir}/inventory.sh
  {playbookdir}/local-dns.yaml
  {playbookdir}/upgrade-kernel.yaml
  {playbookdir}/build4.yaml

[t22]
desc = pthreaded bos test
distro = centos7
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_client_install_method = rsync
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = https://gerrit.openafs.org/openafs
var.afs_server_build_git_ref = refs/changes/71/14071/1
playbooks =
  {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml
  {playbookdir}/upgrade-kernel.yaml
  {playbookdir}/testcell.yaml
