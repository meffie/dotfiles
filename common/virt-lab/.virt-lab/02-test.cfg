# Auto Generated - Do Not Edit

#-------------------------------------------------------------------
# Package installs
#-------------------------------------------------------------------

[ta01]
desc = centos6
distro = centos6
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/testcell.yaml && ssh ta0101 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles

[ta02]
desc = centos7
distro = centos7
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/testcell.yaml && ssh ta0201 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles

[ta03]
desc = centos8
distro = centos8
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/testcell.yaml && ssh ta0301 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles

[ta04]
desc = debian10
distro = debian10
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/testcell.yaml && ssh ta0401 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles

[ta05]
desc = debian9
distro = debian9
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/testcell.yaml && ssh ta0501 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles

[ta06]
desc = fedora31
distro = fedora31
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/testcell.yaml && ssh ta0601 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles

[ta07]
desc = opensuse15
distro = opensuse15
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/testcell.yaml && ssh ta0701 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles

[ta08]
desc = ubuntu1804
distro = ubuntu1804
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/testcell.yaml && ssh ta0801 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles

#-------------------------------------------------------------------
# Build master
#-------------------------------------------------------------------

[tb01]
desc = centos6 build master
distro = centos6
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/upgrade-kernel.yaml {playbookdir}/testcell.yaml
  && ssh tb0101 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = git://git.openafs.org/openafs
var.afs_server_build_git_ref = master
var.afs_client_install_method = rsync
var.afs_client_build_force = no
var.afs_client_build_builddir = /usr/local/src/openafs_client
var.afs_client_build_destdir = /tmp/openafs_client
var.afs_client_build_fetch_method = git
var.afs_client_build_git_repo = git://git.openafs.org/openafs
var.afs_client_build_git_ref = master

[tb02]
desc = centos7 build master
distro = centos7
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/upgrade-kernel.yaml {playbookdir}/testcell.yaml
  && ssh tb0201 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = git://git.openafs.org/openafs
var.afs_server_build_git_ref = master
var.afs_client_install_method = rsync
var.afs_client_build_force = no
var.afs_client_build_builddir = /usr/local/src/openafs_client
var.afs_client_build_destdir = /tmp/openafs_client
var.afs_client_build_fetch_method = git
var.afs_client_build_git_repo = git://git.openafs.org/openafs
var.afs_client_build_git_ref = master

[tb03]
desc = centos8 build master
distro = centos8
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/upgrade-kernel.yaml {playbookdir}/testcell.yaml
  && ssh tb0301 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = git://git.openafs.org/openafs
var.afs_server_build_git_ref = master
var.afs_client_install_method = rsync
var.afs_client_build_force = no
var.afs_client_build_builddir = /usr/local/src/openafs_client
var.afs_client_build_destdir = /tmp/openafs_client
var.afs_client_build_fetch_method = git
var.afs_client_build_git_repo = git://git.openafs.org/openafs
var.afs_client_build_git_ref = master

[tb04]
desc = debian10 build master
distro = debian10
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/upgrade-kernel.yaml {playbookdir}/testcell.yaml
  && ssh tb0401 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = git://git.openafs.org/openafs
var.afs_server_build_git_ref = master
var.afs_client_install_method = rsync
var.afs_client_build_force = no
var.afs_client_build_builddir = /usr/local/src/openafs_client
var.afs_client_build_destdir = /tmp/openafs_client
var.afs_client_build_fetch_method = git
var.afs_client_build_git_repo = git://git.openafs.org/openafs
var.afs_client_build_git_ref = master

[tb05]
desc = debian9 build master
distro = debian9
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/upgrade-kernel.yaml {playbookdir}/testcell.yaml
  && ssh tb0501 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = git://git.openafs.org/openafs
var.afs_server_build_git_ref = master
var.afs_client_install_method = rsync
var.afs_client_build_force = no
var.afs_client_build_builddir = /usr/local/src/openafs_client
var.afs_client_build_destdir = /tmp/openafs_client
var.afs_client_build_fetch_method = git
var.afs_client_build_git_repo = git://git.openafs.org/openafs
var.afs_client_build_git_ref = master

[tb06]
desc = fedora31 build master
distro = fedora31
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/upgrade-kernel.yaml {playbookdir}/testcell.yaml
  && ssh tb0601 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = git://git.openafs.org/openafs
var.afs_server_build_git_ref = master
var.afs_client_install_method = rsync
var.afs_client_build_force = no
var.afs_client_build_builddir = /usr/local/src/openafs_client
var.afs_client_build_destdir = /tmp/openafs_client
var.afs_client_build_fetch_method = git
var.afs_client_build_git_repo = git://git.openafs.org/openafs
var.afs_client_build_git_ref = master

[tb07]
desc = opensuse15 build master
distro = opensuse15
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/upgrade-kernel.yaml {playbookdir}/testcell.yaml
  && ssh tb0701 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = git://git.openafs.org/openafs
var.afs_server_build_git_ref = master
var.afs_client_install_method = rsync
var.afs_client_build_force = no
var.afs_client_build_builddir = /usr/local/src/openafs_client
var.afs_client_build_destdir = /tmp/openafs_client
var.afs_client_build_fetch_method = git
var.afs_client_build_git_repo = git://git.openafs.org/openafs
var.afs_client_build_git_ref = master

[tb08]
desc = ubuntu1804 build master
distro = ubuntu1804
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/upgrade-kernel.yaml {playbookdir}/testcell.yaml
  && ssh tb0801 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = git://git.openafs.org/openafs
var.afs_server_build_git_ref = master
var.afs_client_install_method = rsync
var.afs_client_build_force = no
var.afs_client_build_builddir = /usr/local/src/openafs_client
var.afs_client_build_destdir = /tmp/openafs_client
var.afs_client_build_fetch_method = git
var.afs_client_build_git_repo = git://git.openafs.org/openafs
var.afs_client_build_git_ref = master

#-------------------------------------------------------------------
# Build openafs-stable-1_8_x
#-------------------------------------------------------------------

[tb09]
desc = centos6 build openafs-stable-1_8_x
distro = centos6
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/upgrade-kernel.yaml {playbookdir}/testcell.yaml
  && ssh tb0901 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = git://git.openafs.org/openafs
var.afs_server_build_git_ref = openafs-stable-1_8_x
var.afs_client_install_method = rsync
var.afs_client_build_force = no
var.afs_client_build_builddir = /usr/local/src/openafs_client
var.afs_client_build_destdir = /tmp/openafs_client
var.afs_client_build_fetch_method = git
var.afs_client_build_git_repo = git://git.openafs.org/openafs
var.afs_client_build_git_ref = openafs-stable-1_8_x

[tb10]
desc = centos7 build openafs-stable-1_8_x
distro = centos7
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/upgrade-kernel.yaml {playbookdir}/testcell.yaml
  && ssh tb1001 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = git://git.openafs.org/openafs
var.afs_server_build_git_ref = openafs-stable-1_8_x
var.afs_client_install_method = rsync
var.afs_client_build_force = no
var.afs_client_build_builddir = /usr/local/src/openafs_client
var.afs_client_build_destdir = /tmp/openafs_client
var.afs_client_build_fetch_method = git
var.afs_client_build_git_repo = git://git.openafs.org/openafs
var.afs_client_build_git_ref = openafs-stable-1_8_x

[tb11]
desc = centos8 build openafs-stable-1_8_x
distro = centos8
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/upgrade-kernel.yaml {playbookdir}/testcell.yaml
  && ssh tb1101 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = git://git.openafs.org/openafs
var.afs_server_build_git_ref = openafs-stable-1_8_x
var.afs_client_install_method = rsync
var.afs_client_build_force = no
var.afs_client_build_builddir = /usr/local/src/openafs_client
var.afs_client_build_destdir = /tmp/openafs_client
var.afs_client_build_fetch_method = git
var.afs_client_build_git_repo = git://git.openafs.org/openafs
var.afs_client_build_git_ref = openafs-stable-1_8_x

[tb12]
desc = debian10 build openafs-stable-1_8_x
distro = debian10
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/upgrade-kernel.yaml {playbookdir}/testcell.yaml
  && ssh tb1201 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = git://git.openafs.org/openafs
var.afs_server_build_git_ref = openafs-stable-1_8_x
var.afs_client_install_method = rsync
var.afs_client_build_force = no
var.afs_client_build_builddir = /usr/local/src/openafs_client
var.afs_client_build_destdir = /tmp/openafs_client
var.afs_client_build_fetch_method = git
var.afs_client_build_git_repo = git://git.openafs.org/openafs
var.afs_client_build_git_ref = openafs-stable-1_8_x

[tb13]
desc = debian9 build openafs-stable-1_8_x
distro = debian9
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/upgrade-kernel.yaml {playbookdir}/testcell.yaml
  && ssh tb1301 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = git://git.openafs.org/openafs
var.afs_server_build_git_ref = openafs-stable-1_8_x
var.afs_client_install_method = rsync
var.afs_client_build_force = no
var.afs_client_build_builddir = /usr/local/src/openafs_client
var.afs_client_build_destdir = /tmp/openafs_client
var.afs_client_build_fetch_method = git
var.afs_client_build_git_repo = git://git.openafs.org/openafs
var.afs_client_build_git_ref = openafs-stable-1_8_x

[tb14]
desc = fedora31 build openafs-stable-1_8_x
distro = fedora31
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/upgrade-kernel.yaml {playbookdir}/testcell.yaml
  && ssh tb1401 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = git://git.openafs.org/openafs
var.afs_server_build_git_ref = openafs-stable-1_8_x
var.afs_client_install_method = rsync
var.afs_client_build_force = no
var.afs_client_build_builddir = /usr/local/src/openafs_client
var.afs_client_build_destdir = /tmp/openafs_client
var.afs_client_build_fetch_method = git
var.afs_client_build_git_repo = git://git.openafs.org/openafs
var.afs_client_build_git_ref = openafs-stable-1_8_x

[tb15]
desc = opensuse15 build openafs-stable-1_8_x
distro = opensuse15
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/upgrade-kernel.yaml {playbookdir}/testcell.yaml
  && ssh tb1501 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = git://git.openafs.org/openafs
var.afs_server_build_git_ref = openafs-stable-1_8_x
var.afs_client_install_method = rsync
var.afs_client_build_force = no
var.afs_client_build_builddir = /usr/local/src/openafs_client
var.afs_client_build_destdir = /tmp/openafs_client
var.afs_client_build_fetch_method = git
var.afs_client_build_git_repo = git://git.openafs.org/openafs
var.afs_client_build_git_ref = openafs-stable-1_8_x

[tb16]
desc = ubuntu1804 build openafs-stable-1_8_x
distro = ubuntu1804
postcreate = ansible-playbook -i {scriptdir}/inventory.sh {playbookdir}/local-dns.yaml
  {playbookdir}/wait.yaml {playbookdir}/upgrade-kernel.yaml {playbookdir}/testcell.yaml
  && ssh tb1601 run-openafs-robotest.sh tests
group.afs_cell = 1
group.afs_clients = 1
group.afs_kdcs = 1
group.afs_databases = 1
group.afs_fileservers = 1
group.afs_robotest = 1
var.afs_bosserver_opts = -pidfiles
var.afs_selinux_mode = permissive
var.afs_server_install_method = rsync
var.afs_server_build_force = no
var.afs_server_build_builddir = /usr/local/src/openafs_server
var.afs_server_build_destdir = /tmp/openafs_server
var.afs_server_build_fetch_method = git
var.afs_server_build_git_repo = git://git.openafs.org/openafs
var.afs_server_build_git_ref = openafs-stable-1_8_x
var.afs_client_install_method = rsync
var.afs_client_build_force = no
var.afs_client_build_builddir = /usr/local/src/openafs_client
var.afs_client_build_destdir = /tmp/openafs_client
var.afs_client_build_fetch_method = git
var.afs_client_build_git_repo = git://git.openafs.org/openafs
var.afs_client_build_git_ref = openafs-stable-1_8_x

